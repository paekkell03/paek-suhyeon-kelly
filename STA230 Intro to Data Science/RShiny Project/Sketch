library(shiny)
library(ggplot2)
library(dplyr)
library(tidyr)
library(shinydashboard)
library(ggrepel) # used to prevent label overlap in ggplots
library(devtools) # required for anatogram
library(gganatogram) # installed from Github; for human anatogram


## we will put the following data cleaning in a different R file later
## Loading and cleaning data
cancerdata <- read.csv("C:/Users/deban/OneDrive/Documents/cancer1.csv")

# Viewing all race/ethnicity and age categories
#racecategories <- unique(cancerdata$Race.ethnicity) 
#print(racecategories)
#allagecat <- unique(new_cancerdata$Age_recode)
#print(allagecat) 

# Renaming columns and clean categories for readability
new_cancerdata <- cancerdata %>%
  rename(Age.recode = Age.recode.with..1.year.olds) %>%
  mutate(
    # Recode Race/Ethnicity
    Race.ethnicity = case_when(
      Race.ethnicity %in% c("Chinese", "Filipino", "Korean (1988+)", "Other Asian (1991+)",
                            "Asian Indian (2010+)", "Japanese", "Laotian (1988+)", 
                            "Pakistani (2010+)", "Thai (1994+)", "Asian Indian or Pakistani, NOS (1988+)", 
                            "Hmong (1988+)", "Vietnamese (1988+)", "Kampuchean (1988+)") ~ "All Asian",
      Race.ethnicity %in% c("Hawaiian", "Samoan (1991+)", "Pacific Islander, NOS (1991+)",
                            "Chamorran (1991+)", "Tahitian (1991+)", "Melanesian, NOS (1991+)", 
                            "Tongan (1991+)", "Fiji Islander (1991+)", "Guamanian, NOS (1991+)", 
                            "Micronesian, NOS (1991+)", "Polynesian, NOS (1991+)", 
                            "New Guinean (1991+)") ~ "All Pacific Islander",
      TRUE ~ Race.ethnicity
    ),
    # Recode Age groups
    Age.recode = case_when(
      Age.recode %in% c("00 years", "01-04 years", "05-09 years") ~ "0-9 years",
      Age.recode %in% c("10-14 years", "15-19 years") ~ "10-19 years",
      Age.recode %in% c("20-24 years", "25-29 years") ~ "20-29 years",
      Age.recode %in% c("30-34 years", "35-39 years") ~ "30-39 years",
      Age.recode %in% c("40-44 years", "45-49 years") ~ "40-49 years",
      Age.recode %in% c("50-54 years", "55-59 years") ~ "50-59 years",
      Age.recode %in% c("60-64 years", "65-69 years") ~ "60-69 years",
      Age.recode %in% c("70-74 years", "75-79 years") ~ "70-79 years",
      Age.recode %in% c("80-84 years", "85+ years") ~ "80+ years",
      TRUE ~ Age.recode
    )
  )



## Making RShiny app

# Define UI
ui <- dashboardPage(
  dashboardHeader(title = "Cancer Data Dashboard"),
  dashboardSidebar(
    radioButtons(inputId = "pief", label = "Select Pie chart Facet Variable:", 
                 choiceNames = c("Age of Diagnosis", "Race/Ethnicity", "Sex"),
                 choiceValues = c("Age.recode", "Race.ethnicity", "Sex")),
    radioButtons(inputId = "lines", label = "Select Line graph Facet Variable:",
                  choiceNames = c("White", "Black", "All Asian", "All Pacific Islander",
                                  "American Indian/Alaska Native", "Other", "Unknown"),
                  choiceValues = c("White", "Black", "All Asian", "All Pacific Islander",
                                   "American Indian/Alaska Native", "Other", "Unknown"))
  ),
  dashboardBody(
    plotOutput("PieChart"),
    actionButton("plot_button", "Show Line Graph"),
    plotOutput("LineGraph")
  )
)

# Define server logic
server <- function(input, output){
  #data manipulation for pie-chart on cancer by race
  output$PieChart <- renderPlot({
    # Create a summary based on the selected variable
    data <- new_cancerdata %>%
      count(!!sym(input$pief)) %>%
      mutate(percent = n / sum(n) * 100,
             percent_label = paste0(round(percent, 1), "%"))
    
    # plotting pie chart
    ggplot(data, aes(x = "", y = percent, fill = !!sym(input$pief))) +
      geom_col(color = "black") +
      coord_polar(theta = "y") +
      labs(fill = input$pief, y = "Percentage", x = NULL) +
      theme_minimal() +
      geom_text_repel(aes(label = percent_label), size = 4, 
                      position = position_stack(vjust = 0.5), 
                      box.padding = 0.1, max.overlaps = Inf)
  })
  
  
  # data manipulation for line graphs on cancer by race/sex over age groups
  output$LineGraph <- renderPlot({
    #need to click action button for line graph
    input$plot_button
    isolate({
      data_count <- new_cancerdata %>%
        filter(Race.ethnicity == input$lines) %>% 
        group_by(Age.recode, Sex) %>%
        summarize(count_perAgegroup = n())
      
      #plotting line graphs
      ggplot(data_count, aes(x = Age.recode, y = count_perAgegroup, color = Sex, group = Sex)) +
        geom_point() + geom_line() +
        labs(title = "Cancer Distribution Over Ages",
             x = "Age Group",
             y = "Count") +
        theme_minimal()
    })
    
  })
}
#Piechart reference: https://www.youtube.com/watch?v=AHRh4yyHl4g


shinyApp(ui, server)

