---
title: "Sketch"
author: "Kelly & Debanjali"
date: "2024-10-31"
output: pdf_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(shiny)
library(ggplot2)
library(dplyr)
library(tidyr)
library(shinydashboard)
library(bslib)
library(plotly)
library(ggrepel) # used to prevent label overlap in ggplots

```

## We will put the following data cleaning in a different R file later
```{r Loading&Cleaning data}
cancerdata <- read.csv("/Users/kellypaek/Desktop/STA230_RShiny_Debanjali_Kelly/cancer1.csv")

# Viewing all categories for cleaning
#racecategories <- unique(cancerdata$Race.ethnicity) 
#print(racecategories)
#allagecat <- unique(cancerdata$Age_recode)
#print(allagecat) 
#alltype <- unique(cancerdata$Primary.Site...labeled)
#print(alltype)

# Renaming columns and clean categories for readability
new_cancerdata <- cancerdata %>%
  rename(Age.recode = Age.recode.with..1.year.olds) %>%
  separate(col = Primary.Site...labeled, 
           into = c("Site", "SpecificSite"),
           sep = "[-]") %>% #Need to fix this because C50.4 has 2 '-'s
  select(-c("Year.of.diagnosis", "SEER.cause.specific.death.classification")) %>% 
  mutate(
    # Recategorize Race/Ethnicity
    Race.ethnicity = case_when(
      Race.ethnicity %in% c("Chinese", "Filipino", "Korean (1988+)", "Other Asian (1991+)",
                            "Asian Indian (2010+)", "Japanese", "Laotian (1988+)", 
                            "Pakistani (2010+)", "Thai (1994+)", "Asian Indian or Pakistani, NOS (1988+)", 
                            "Hmong (1988+)", "Vietnamese (1988+)", "Kampuchean (1988+)") ~ "All Asian",
      Race.ethnicity %in% c("Hawaiian", "Samoan (1991+)", "Pacific Islander, NOS (1991+)",
                            "Chamorran (1991+)", "Tahitian (1991+)", "Melanesian, NOS (1991+)", 
                            "Tongan (1991+)", "Fiji Islander (1991+)", "Guamanian, NOS (1991+)", 
                            "Micronesian, NOS (1991+)", "Polynesian, NOS (1991+)", 
                            "New Guinean (1991+)") ~ "All Pacific Islander",
      Race.ethnicity %in% c("Other", "Unknown") ~ "Other or Unknown",
      TRUE ~ Race.ethnicity
    ),
    # Recategorize age groups
    Age.recode = case_when(
      Age.recode %in% c("00 years", "01-04 years", "05-09 years") ~ "0-9 years",
      Age.recode %in% c("10-14 years", "15-19 years") ~ "10-19 years",
      Age.recode %in% c("20-24 years", "25-29 years") ~ "20-29 years",
      Age.recode %in% c("30-34 years", "35-39 years") ~ "30-39 years",
      Age.recode %in% c("40-44 years", "45-49 years") ~ "40-49 years",
      Age.recode %in% c("50-54 years", "55-59 years") ~ "50-59 years",
      Age.recode %in% c("60-64 years", "65-69 years") ~ "60-69 years",
      Age.recode %in% c("70-74 years", "75-79 years") ~ "70-79 years",
      Age.recode %in% c("80-84 years", "85+ years") ~ "80+ years",
      TRUE ~ Age.recode
    ),
    # Recategorize by major organ system
    Site = case_when(
      Site %in% c("C18.0", "C18.1", "C18.2", "C18.3", "C18.4", "C18.5", "C18.6",
                  "C18.7", "C18.8", "C18.9", "C19.9", "C20.9", "C21.0", "C21.1", 
                  "C23.9", "C24.0", "C24.1", "C25.0", "C25.1", "C25.2", "C25.8") 
      ~ "Digestive System",
      Site %in% c("C34.0", "C34.1", "C34.2", "C34.3", "C34.8", "C34.9") 
      ~ "Respiratory System",
      Site %in% c("C43.0", "C43.1", "C43.2", "C43.3", "C43.4", "C43.5", "C43.6",
                  "C43.7", "C43.8", "C43.9") 
      ~ "Skin and Related Tissues",
      Site %in% c("C64.9", "C65.9", "C67.0", "C67.1", "C67.2", "C67.3", "C67.4",
                  "C67.5", "C67.6", "C67.7", "C67.8", "C67.9") 
      ~ "Urinary System",
      Site %in% c("C50.0", "C50.1", "C50.2", "C50.3", "C50.4", "C50.5", "C50.6",
                  "C50.8", "C50.9", "C61.9") 
      ~ "Reproductive System",
      Site %in% c("C73.9") 
      ~ "Endocrine System",
      Site %in% c("C81.9", "C82.9", "C83.9", "C85.9", "C88.9", "C90.0", "C91.0") 
      ~ "Lymphatic and Hematopoietic System",
      Site %in% c("C71.0", "C71.1", "C71.2", "C71.3", "C71.4", "C71.5", "C71.6",
                  "C71.7", "C71.8", "C71.9") 
      ~ "Nervous System",
      TRUE ~ "Other"
    )
  )

```

## Building RShiny App
```{r RShinyApp}
# Define UI
ui <- dashboardPage(
  dashboardHeader(title = "Cancer Data Dashboard"),
  dashboardSidebar(
    sidebarMenu(
      menuItem("Pie Chart", tabName = "piechart", icon = icon("chart-pie")),
      menuItem("Line Graph", tabName = "linegraph", icon = icon("chart-line"))
    )
  ),
  dashboardBody(
    tabItems(
      # First tab for Pie Chart
      tabItem(tabName = "piechart",
              h2("Pie Chart"),
              radioButtons(inputId = "pief", label = "Select Variable for Piechart:",
                           choiceNames = c("Age of Diagnosis", "Race/Ethnicity", "Sex", "Cancer Site"),
                           choiceValues = c("Age.recode", "Race.ethnicity", "Sex", "Site")),
              actionButton("plot_button", "Show Updated Pie Chart"),
              plotOutput("PieChart")
      ),

      # Second tab for Line Graph
      tabItem(tabName = "linegraph",
              h2("Line Graph"),
              radioButtons(inputId = "lines", label = "Select Line graph Facet Variable:",
                           choiceNames = c("White", "Black", "All Asian", "All Pacific Islander",
                                           "American Indian/Alaska Native", "Other", "Unknown"),
                           choiceValues = c("White", "Black", "All Asian", "All Pacific Islander",
                                            "American Indian/Alaska Native", "Other", "Unknown")),
              actionButton("plot_button", "Show Updated Line Graph"),
              plotlyOutput("LineGraph")  # Updated to plotlyOutput
      )
    )
  )
)

# Define server logic
server <- function(input, output){
  # Data manipulation for pie-chart on cancer by race
  output$PieChart <- renderPlot({
    input$plot_button
    isolate({
      # Create a summary based on the selected variable
      data <- new_cancerdata %>%
        count(!!sym(input$pief)) %>%
        mutate(percent = n / sum(n) * 100,
               percent_label = paste0(round(percent, 1), "%"))

      # Plotting pie chart
      ggplot(data, aes(x = "", y = percent, fill = !!sym(input$pief))) +
        geom_col(color = "black") +
        coord_polar(theta = "y") +
        labs(fill = input$pief, y = "Percentage", x = NULL) +
        theme_minimal() +
        geom_text_repel(aes(label = percent_label), size = 4,
                        position = position_stack(vjust = 0.5),
                        box.padding = 0.05, max.overlaps = Inf)
    })
  })

  # Data manipulation for line graphs on cancer by race/sex over age groups
  output$LineGraph <- renderPlotly({ # Use renderPlotly to allow hover
  input$plot_button
  isolate({
    data_count <- new_cancerdata %>%
      filter(Race.ethnicity == input$lines) %>%
      group_by(Age.recode, Sex) %>%
      summarize(count_perAgegroup = n(),
                avg_survival_mts_perAgegroup = mean(Survival.months))
    
    # Custom hover text
    data_count <- data_count %>%
      mutate(hover_text = paste("Age Group:", Age.recode, "<br>",
                                "Sex:", Sex, "<br>",
                                "Count:", count_perAgegroup, "<br>",
                                "Mean Survival Month for age group:", 
                                round(avg_survival_mts_perAgegroup, 1), "<br>"))
    
    # Plotting line graphs with custom hover text
    plot <- ggplot(data_count, aes(x = Age.recode, 
                                   y = count_perAgegroup, 
                                   color = Sex, group = Sex, text = hover_text)) +
      geom_point() + geom_line() +
      labs(title = "Cancer Distribution Over Ages",
           x = "Age Group",
           y = "Count") +
      theme_minimal()
    
    ggplotly(plot, tooltip = "text")  # Display custom hover text
    })
  })
}
#Piechart reference: https://www.youtube.com/watch?v=AHRh4yyHl4g

# Run the app
shinyApp(ui, server)


```
